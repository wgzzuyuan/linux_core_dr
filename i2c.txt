1,i2c的驱动架构有几层？？？
i2c有3层要掌握，i2c核心层，i2c总线驱动，i2c设备驱动

i2c核心层:管理总线驱动和设备驱动


i2c总线驱动：针对不同的I2C控制器做区分


i2c设备驱动：操作不同的外设



2,在linux中，I2C的分为几层？？？每一层都有哪些东西？？？

3层,分别是应用层序，I2C内核，硬件。

其中，内核部分就是驱动部分，硬件分为I2C控制器和I2C外设。

在Linux中，I2C控制器属于硬件。
实际上，在STM32中，I2C的控制器也是属于硬件。

I2C外设在Linux中属于硬件
实际上，在STM32中，I2C外设也是属于硬件。


3，总线驱动端，不同的I2C总线驱的区别是 什么？？？具体的代码在哪里？？？

总线端，I2C1,I2C2,I2C3 就是不同的总线。不同的总线对应着不同的控制器。



4，I2C的驱动程序应该怎么学习？？？
一半冷一半热  15:44:55
驱动工程师搞的是设备

一半冷一半热  15:45:02
只是框架里面的一小块

一半冷一半热  15:45:18
主机驱动是不需要深入了解

5，我目前的疑问是什么？？？
和STM32相比较，STM32的SPI是主机和外设都要初始化一遍，STM32的I2C是直接配置的，在软件上，并没有初始化2次，而是直接初始化一次，那么

像uart和IIC 都是只初始化了一次，那么Linux是怎么区分的总线驱动和设备驱动？？？ 总线驱动做了什么，总线驱动和设备驱动是怎么衔接的？？？





6，I2C总线驱动和设备驱动的区别？？？
总线  /driver/i2c/busses/ 目录下有各种i2c的总线驱动。
设备  /driver/rtc/pvf8568.c

当看到这里的时候，到底总线驱动和设备驱动的区别是什么呢？？？？










6，我应该怎么改了，是自己重新添加一个文件，还是改现有的文件中的代码？？？













