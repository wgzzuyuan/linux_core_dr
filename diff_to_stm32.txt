
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
linux 和STM32的区别大大的不同，直接介绍Linux下芯片的运行流程如下：

1，从启动阶段和运行阶段的角度来介绍一下

STM用的 FLASH 是片内的，用的 内存 也是片内SRAM，
跑linux 的芯片，片内的 ROM 和片内的SRAM 只是启动阶段用的，他最后的 FLASH 和 内存 都是片外的

片外的容量会大很多，片外的接个EMMC 可以达到 64G都可以，DDR 可以随便起步来个 256M，甚至 1GB

2，启动阶段和运行阶段的衔接

大致流程是这样，他片内SRAM 是运行初始化代码的，这些芯片不集成片内 FLASH 因为FLASH片内太小了，

他集成片内 ROM ，ROM是不可以擦除的，上电会先运行ROM里面的代码，ROM的代码会根据 CPU启动引脚的配置，

去外部的FLASH 中 比如 EMMC 或者 TF卡读取代码，放到SRAM运行，SRAM运行这个代码是 DDR的初始化，

他会初始化DDR 并且跳到DDR 中运行， 他是一环接一环的运行 ，先从 ROM 运行，ROM 最后跳到 SRAM，SRAM 初始，

化DDR，再跳到DDR。STM32就不会跳。




STM32的启动方式？？？
1，从系统存储器启动，当我们的代码跑飞的时候，需要短接一下BOOT,这个时候就是从系统存储器启动的。

2，从用户FLASH启动，经常我们自己下载代码的时候，正常我们所有的工程都是从这个角度启动的。






