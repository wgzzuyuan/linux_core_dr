1,工作流程是什么？？？


首先要在设备树中添加IIC接口


2，I2C核心，I2C总线驱动，I2C设备驱动三者的区别？？？





3，I2C核心，I2C总线驱动，I2C设备驱动三者的代码位置？？？

手册中会说明。

位置并不重要，重要的把逻辑理清楚

4，为啥要用加密芯片，加密芯片是对什么进行加密？？？
是对要发送的数据进行发送，还是对所有的代码进修加密？？？



为啥要用加密芯片？？？  终端身份的认证，数据的加密

5，怎么测试，是要具体的写一个数据传输加密的功能性测试码？？？
不是，第一步是对IIC芯片的读写，是对芯片的读写，而不是功能。

等对芯片的读写成功了，剩下的就简单了很多了。



6，Linux内核驱动的第一步是什么？？？
当下最重要的是要操作IIC芯片，实现对IIC芯片的读写，今天就要搞定这个事情。+


7，怎么调试驱动？？？

直接读取I2C芯片的硬件的id号即可。


8，IIC的通讯协议上和你以前见过的有什么不同？？？


9，为什么要用加密芯片？？？
为了防止硬件抄板子，对手有你的可执行文件，直接抄板子，把程序下载进去，但是加了加密芯片后，内核起来后要核对密钥，不一样就不会执行程序。


10，
今天先把IIC的数据流程捋清楚了，剩下的在说


11，

先把接口捋清除了，剩下的再说吧，这个是第一步


20200709

1，今天要做的是把IIC的思路定下来，不着急编译，重点是思路

2，编译的时候怎么编译？？？首先肯定要配置一下，然后才是编译，
关键是你配置完后，./build.sh  的时候，你怎么确保你配置的参数被编译进去了？？？
---看手册



3，这2个函数的区别是什么？？？

i2c_del_driver(&lkt4306_driver);//注销
i2c_unregister_device(lkt4306_client); //卸载

一个是注册对应的注销，另一个是加载对应的卸载，

4，

对这个流程还是没有一个可以参考的东西，

虚拟的驱动接口和设备文件

5，I2C核心层做了什么？？？
EXPORT_SYMBOL(i2c_smbus_xfer);

6，I2C设备器驱动在哪个目录下？？？
iic总线驱动(适配器驱动)
总线驱动就是设配器驱动。在busses目录下


7，把书上的东西确定一下，看看有没有凌芯科技提供的设备端的函数。
今天要把这个思路定下来，捎带要把编译和连接的事情做了，


8，凌芯科技提供的设备端驱动，这个设备端的驱动的功能是提供“获得适配器”，
在适配器下创建一个新的设备，

static int lkt4306_dev_init(void)
{
	struct i2c_adapter *i2c_adap;	
	//因为JZ2440 only one i2c bus
	i2c_adap = i2c_get_adapter(0);
	
	//在该适配器下创建一个新的设备，设备信息在i2c_board_info 结构体重，
	//此后可以使用此i2c_adapter 操作函数对该设备发出I2C信号
	lkt4306_client = i2c_new_device(i2c_adap,&lkt4306_info);//不检查设备地址是否存在
	//lkt4306_client = i2c_new_probed_device();//检查设备地址是否存在	
	i2c_put_adapter(i2c_adap); //使用完释放
	return 0;		
}

该函数的功能是卸载设备驱动
static void lkt4306_dev_exit(void)
{
	i2c_unregister_device(lkt4306_client); //卸载
}


9，现在要做的是什么？？？
是从适配器的角度理清楚思路

10，什么是sysfs节点？？？
sysfs就是linux中/sys/下的所有内容,

11，sysfs节点的形式？？？
就是proc/devices 文件中，可以查看你的驱动编译的结果

12，现在就是直接找总线端的参考代码，


你看到的rtc等东西，都是设备端的改动，总线端你需不需要改动，你并不知道，你并不知道，
在IIC的总线端你需要或者不需要改动，总线端，是否所有的总线都写到了i2c-xunxi.c，不是，
现在你直接找个别的设备，看看他的总线端的程序是怎么个流程。


13，从书上的情况来看是不用改的，为什么不用改，

按照树上的东西来看，是不用改动的，

在总线驱动端，做了适配器驱动的编写，适配器驱动的内容就是总线驱动的内容，

在/drivers/i2c/busses 目录下，放着所有的总线驱动，除了i2c，还有SPI等。


14，总线驱动到底做了什么？？？还是没有理解明白


15， Makefile怎么编写？？？
你的问题是什么？？？
这一层makefile的内容结构是什么？？？
CONFIG_DCA 这个名字是怎么起的？？？应该怎么命名
dca-objs 这个应该怎么命名，dca-core.o dca-sysfs.o 这2 个
目标文件的命名是怎么命名的？？？


16，linux 怎么配置内核的设备驱动？？？？
make ARCH=arm menuconfig   √√√
 make menuconfig 是错误的  ×××
 
 
17，
为什么打包不成功？？？打包需要检查什么？？？


18，


1，接下来的思路是什么？？？
不管怎么样，先编译过了，

2，I2C还有什么不理解的？？？
那就是总线驱动做了什么，设备驱动做了什么，万一你写进入和你读出来的不一样，你怎么操作？？？
要把这个BUG的思路写好


3，

先把IIC的总线驱动做了什么，再把设备端做了什么，写出来。

4，STM32 的I2C的操作步骤是怎么样的？？？
初始化→→写寄存器→→读寄存器。

linxu下在哪里初始化的，在哪里写寄存器的，在哪里读寄存器的？？？
从目前的代码上看，没有看到任何寄存器的操作的代码，那么，这款
I2C加密芯片怎么被操作的？？？

5，从I2C总线驱动部分来看，目前为止没有看到寄存器的操作，没有看到I2C的硬件
的参数的设置。



硬件I2C 要配置的参数表有哪些？？？
（1）I2C的模式
（2）I2C占空比
（3）I2C设备地址
（4）I2C应答
（5）地址位数:
（6）I2C速度
（7）



20200710







